---> Python basics
===> Python
# Reference:
- https://www.geeksforgeeks.org/python-programming-examples/
- https://www.geeksforgeeks.org/python-exercises-practice-questions-and-solutions/?ref=lbp
- https://www.w3schools.com/python/python_examples.asp

@Syntax
~~~
#This is a comment.
"""This is a
multiline docstring."""
print("Hello, World!")
~~~
@variables
~~~
x = 5
y = "John"
print(x)
print(y)

a = "Python"
b = "is"
c = "awesome"
print(a, b, c)


p = "Python "
q = "is "
r = "awesome"
print(p + q + r)

~~~
@Numbers
~~~
x = 1
y = 2.8
z = 1j

print(type(x))
print(type(y))
print(type(z))

a = 1
b = 35656222554887711
c = -3255522

print(type(a))
print(type(b))
print(type(c))

p = 1.10
q = 1.0
r = -35.59

print(type(p))
print(type(q))
print(type(r))

t = 35e3
u = 12E4
v = -87.7e100

print(type(t))
print(type(u))
print(type(v))

d = 3+5j
e = 5j
f = -5j

print(type(d))
print(type(e))
print(type(f))
~~~

@Casting
~~~
x = int(1)
y = int(2.8)
z = int("3")
print(x)
print(y)
print(z)


a = float(1)
b = float(2.8)
c = float("3")
d = float("4.2")
print(a)
print(b)
print(c)
print(d)


p = str("s1")
q = str(2)
r = str(3.0)
print(p)
print(q)
print(r)

~~~

@Strings
~~~
a = " Hello, World! "
print(a.strip())

b = "Hello, World!"
print(b[2:5])

print(len(a))

print(a.lower())

print(a.upper())

print(a.replace("H", "J"))

p = "Hello, World!"
q = p.split(",")
print(q)
~~~

@Operators
~~~
x = 5
y = 3

print(x + y)

print(x - y)

print(x * y)

print(x / y)

print(x % y)

print(x)

~~~

@Lists
~~~
thislist = ["apple", "banana", "cherry"]
print(thislist)

print(thislist[1])

thislist[1] = "blackcurrant"

print(thislist)

for x in thislist:
  print(x)

if "apple" in thislist:
  print("Yes, 'apple' is in the fruits list")
  
print(len(thislist))

thislist.append("orange")

print(thislist)

thislist.insert(1, "orange")
print(thislist)

thislist.remove("banana")
print(thislist)

thislist.pop()
print(thislist)

del thislist[0]
print(thislist)

thislist.clear()
print(thislist)

thislist = list(("apple", "banana", "cherry"))
print(thislist)

~~~

@Tuples
~~~
thistuple = ("apple", "banana", "cherry")
print(thistuple)

print(thistuple[1])

thistuple[1] = "blackcurrant"

# the value is still the same:
print(thistuple)

for x in thistuple:
  print(x)

if "apple" in thistuple:
  print("Yes, 'apple' is in the fruits tuple")

print(len(thistuple))

del thistuple
print(thistuple) #this will raise an error because the tuple no longer exists

thistuple = tuple(("apple", "banana", "cherry"))
print(thistuple)



~~~

@Sets
~~~
thisset = {"apple", "banana", "cherry"}
print(thisset)

# Note: the set list is unordered, meaning: the items will appear in a random order.

# Refresh this page to see the change in the result.

for x in thisset:
  print(x)
  
print("banana" in thisset)

thisset.add("orange")

print(thisset)

thisset.update(["orange", "mango", "grapes"])

print(thisset)

print(len(thisset))

thisset.remove("banana")

print(thisset)

thisset.discard("banana")

print(thisset)

x = thisset.pop()

print(x) #removed item

print(thisset) #the set after removal

thisset.clear()

print(thisset)

del thisset

print(thisset) #this will raise an error because the set no longer exists

print(thisset)
# Note: the set list is unordered, so the result will display the items in a random order.



~~~

@Dictionaries
~~~
thisdict =	{
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
print(thisdict)

x = thisdict["model"]
print(x)

thisdict["year"] = 2018

print(thisdict)


for x in thisdict:
  print(x)

for x in thisdict:
  print(thisdict[x])

for x in thisdict.values():
  print(x)

for x, y in thisdict.items():
  print(x, y)

if "model" in thisdict:
  print("Yes, 'model' is one of the keys in the thisdict dictionary")
  
print(len(thisdict))

thisdict["color"] = "red"
print(thisdict)

thisdict.pop("model")
print(thisdict)

thisdict.clear()
print(thisdict)

thisdict = dict(brand="Ford", model="Mustang", year=1964)
# note that keywords are not string literals
# note the use of equals rather than colon for the assignment
print(thisdict)
~~~

@if-else
~~~
a = 33
b = 200

if b > a:
  print("b is greater than a")
  
  
a = 33
b = 33
if b > a:
  print("b is greater than a")
elif a == b:
  print("a and b are equal")
  
a = 200
b = 33
if b > a:
  print("b is greater than a")
elif a == b:
  print("a and b are equal")
else:
  print("a is greater than b")

a = 200
b = 33

if a > b: print("a is greater than b")

a = 2
b = 330

print("A") if a > b else print("B")

a = 200
b = 33
c = 500
if a > b and c > a:
  print("Both conditions are True")
  
a = 200
b = 33
c = 500
if a > b or a > c:
  print("At least one of the conditions is True")

~~~

@while-loop
~~~

~~~

@for-loop
~~~

~~~

@functions
~~~

~~~

@lambda
~~~

~~~

@Arrays
~~~

~~~

@classes and objects
~~~

~~~

@Iterators
~~~

~~~

@Modules
~~~

~~~

@Dates
~~~

~~~

@Math
~~~

~~~

@Json
~~~

~~~

@Regex
~~~

~~~

@PIP
~~~

~~~

@TryExcept
~~~

~~~

@Filehandling
~~~

~~~

@Mysql
~~~

~~~

@MongoDB
~~~

~~~
